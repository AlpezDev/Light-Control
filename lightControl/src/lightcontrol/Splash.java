package lightcontrol;

import java.awt.Color;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javafx.scene.layout.Border;
import javax.swing.Timer;

public class Splash extends javax.swing.JFrame {

    private Color mTransparent;
    private Point mpoint;

    public Splash() {
        mTransparent = new Color(0,0,0,0);
        setUndecorated(true);
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setBackground(mTransparent);
        
        ImageDecore fondo = new ImageDecore(paneBackground, "/image/bulbLoading.png");
        paneBackground.add(fondo).repaint();
        paneBackground.setOpaque(false);
        paneBackground.setBorder(null);
        paneBackground.setBackground(mTransparent);
        
        pbLoad.setBackground(mTransparent);
        pbLoad.setBorder(null);
        initProgressBar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paneBackground = new javax.swing.JPanel();
        pbLoad = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        paneBackground.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                paneBackgroundMouseDragged(evt);
            }
        });
        paneBackground.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                paneBackgroundMousePressed(evt);
            }
        });

        pbLoad.setBackground(new java.awt.Color(255, 255, 255));
        pbLoad.setForeground(java.awt.Color.orange);
        pbLoad.setString("");

        javax.swing.GroupLayout paneBackgroundLayout = new javax.swing.GroupLayout(paneBackground);
        paneBackground.setLayout(paneBackgroundLayout);
        paneBackgroundLayout.setHorizontalGroup(
            paneBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneBackgroundLayout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(pbLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(111, Short.MAX_VALUE))
        );
        paneBackgroundLayout.setVerticalGroup(
            paneBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneBackgroundLayout.createSequentialGroup()
                .addContainerGap(211, Short.MAX_VALUE)
                .addComponent(pbLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(140, 140, 140))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paneBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(paneBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void paneBackgroundMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paneBackgroundMousePressed
       mpoint = evt.getPoint();
        getComponentAt(mpoint);        
    }//GEN-LAST:event_paneBackgroundMousePressed

    private void paneBackgroundMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paneBackgroundMouseDragged
        int currentX = this.getLocation().x;
        int currentY = this.getLocation().y;
        //Se calcula cuÃ¡ntos pixeles en X y Y se ha movido el JFrame
        int moveX = (currentX + evt.getX()) - (currentX + mpoint.x);
        int moveY = (currentY + evt.getY()) - (currentY + mpoint.y);
        //Se calcula las nuevas posiciones en X y Y
        int x = currentX + moveX;
        int y = currentY + moveY;
        //Se pasan las nuevas posiciones al JFrame
        this.setLocation(x, y);        
    }//GEN-LAST:event_paneBackgroundMouseDragged

    private void initProgressBar(){
        Timer mTimer = new Timer(45, (ActionEvent ae) -> {
            pbLoad.setValue(pbLoad.getValue() + 1);
            pbLoad.setBackground(mTransparent);
            pbLoad.setStringPainted(true);
            pbLoad.setString("Ligh control.. "+ pbLoad.getValue() + "%");
        });
        mTimer.start();
    }
    
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Splash().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel paneBackground;
    private javax.swing.JProgressBar pbLoad;
    // End of variables declaration//GEN-END:variables
}
